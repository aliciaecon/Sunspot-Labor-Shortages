%% ========================================================================
% 
%            COMPUTES MOMENTS BY AGE (LIFE CYCLE) AND SIZE
% 
% =========================================================================

function [ JCRateSize, JDRateSize, HiresRateSize, SepsRateSize, ExitRateSize, ExitRateUWSize, FirmShareSize, EmpShareSize, ...
    JCRateAge, JDRateAge, HiresRateAge, SepsRateAge, ExitRateAge, ExitRateUWAge, ...
    FirmShareAge, EmpShareAge, HiresRateESize, HiresRateEAge, HiresRateNSize, HiresRateNAge ] = ...
    ComputeMomentsLifeCycleSize( NumGrids, T12, q, v_znmat, phi, Gn_znmat, gdzdn_znmat,...
    gndzdn_znmat, gdzdn_znamat, gndzdn_znamat, Na, AgeGridLevels, SizeGridLevels )
%%  LOAD SPECIFIC OBJECTS
%__________________________________________________________________________
Nz      = NumGrids.Nz;    	% Number of points in z grid
Nn      = NumGrids.Nn;    	% Number of points in n grid
n_znmat = NumGrids.n_znmat;	% Replica of the n grid, in logs
n_zn    = NumGrids.n_zn;  	% Replica of the n grid in logs in vector

%%  SETUP
%__________________________________________________________________________

Gn_zn   = reshape( Gn_znmat , Nz*Nn , 1 );
v_zn    = reshape( v_znmat , Nz*Nn , 1 );
SizeNewFirm         = repmat( exp(n_zn)  , 1 , length(n_zn) ) ; % Useful to calculate change in size
SizeOldFirm         = repmat( exp(n_zn') , length(n_zn) , 1 ) ; % Useful to calculate change in size
ExitUW_zn           = ( 1 - sum(T12) )' ; % Unweighted exit
Exit_zn             = ( 1 - sum(T12) )' .* exp(n_zn) ; % Exit weighted by employment
JC_zn               = full( sum( T12 .* max(SizeNewFirm - SizeOldFirm , 0) )' ) ; % Job Creation
JD_zn               = sum( T12 .* max(SizeOldFirm - SizeNewFirm , 0) )' + Exit_zn ; % Job Destruction
hires_znmat         = q * v_znmat .* ( phi + (1-phi)*Gn_znmat ) ; % Hires by (z,n)
hires_zn            = reshape( hires_znmat , Nz*Nn , 1 ); % Vector form
HirePerVacancy_zn   = q * ( phi + (1-phi) * Gn_zn ) ; % Hiring rate
VacancyPerHire_zn   = 1 ./ HirePerVacancy_zn ;
vace_zn             = exp(n_zn) .* VacancyPerHire_zn ; % Vacancies of entrants by (z,n)
hiresE_zn           = q * (1-phi) * v_zn .* Gn_zn ; % Hires from employment
hiresN_zn           = q * phi * v_zn ; % Hires from non-employment
hiresEentry_zn      = q * (1-phi) * vace_zn .* Gn_zn ; % Hires by entrants from employment
hiresNentry_zn      = q * phi * vace_zn ; % Hires by entrants from non-employment
seps_zn             = -( JC_zn/12 - JD_zn/12 - hires_zn ) ; % Separations
expn_znamat         = repmat(exp(n_zn),1,Na) ; % Employment in levels by (z,n,a) in a matrix

%%  COMPUTE MOMENTS BY SIZE
%__________________________________________________________________________

        % Moments by bin
    JCRateSize = AggregateBin( JC_zn ,...
                                           exp(n_znmat),...
                                           exp(n_znmat),...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
    
  	JDRateSize = AggregateBin( JD_zn ,...
                                           exp(n_znmat),...
                                           exp(n_znmat) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
    HiresRateSize = AggregateBin( hires_znmat ,...
                                           exp(n_znmat),...
                                           exp(n_znmat) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
  	HiresRateESize = AggregateBin( hiresE_zn ,...
                                           exp(n_znmat),...
                                           exp(n_znmat) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
  	HiresRateNSize = AggregateBin( hiresN_zn ,...
                                           exp(n_znmat),...
                                           exp(n_znmat) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
    SepsRateSize = AggregateBin( seps_zn ,...
                                           exp(n_znmat),...
                                           exp(n_znmat) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
    ExitRateSize = AggregateBin( ExitUW_zn ,...
                                           exp(n_znmat) ,...
                                           ones(Nz,Nn) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
    ExitRateUWSize = AggregateBin( ExitUW_zn ,...
                                           exp(n_znmat) ,...
                                           ones(Nz,Nn) ,...
                                           SizeGridLevels,...
                                           gdzdn_znmat ,...
                                           'Levels','mean') ;
                                       
    FirmShareSize = AggregateBin( gdzdn_znmat ,...
                                           exp(n_znmat),...
                                           ones(Nz,Nn),...
                                           SizeGridLevels,...
                                           ones(Nz,Nn),...
                                           'Levels','sum') ;
                                       
    EmpShareSize = AggregateBin( gndzdn_znmat ,...
                                           exp(n_znmat),...
                                           ones(Nz,Nn),...
                                           SizeGridLevels,...
                                           ones(Nz,Nn),...
                                           'Levels','sum') ;    

        % Approximate to quarterly frequency
    JDRateSize      = JDRateSize     / 4 ; % annual -> quarterly approx. as we do in the data
    JCRateSize      = JCRateSize     / 4 ; % annual -> quarterly approx. as we do in the data
    HiresRateSize   = HiresRateSize  * 3 ; % monthly -> quarterly approx. not as we do in the data
    HiresRateESize  = HiresRateESize * 3 ; % monthly -> quarterly approx. not as we do in the data
    HiresRateNSize  = HiresRateNSize * 3 ; % monthly -> quarterly approx. not as we do in the data
    SepsRateSize    = SepsRateSize   * 3 ; % monthly -> quarterly approx. not as we do in the data
    ExitRateSize    = ExitRateSize   / 4 ; % annual -> quarterly approx. as we do in the data
    ExitRateUWSize  = ExitRateUWSize / 4 ;
    
%%  COMPUTE MOMENTS BY AGE
%__________________________________________________________________________

    JCRateAge = AggregateBin( [ exp(n_zn) , repmat(JC_zn,1,Na-1) ] ,... % need to add entry at age 0
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat,...
                                           AgeGridLevels,...
                                           gdzdn_znamat,...
                                           'Levels','mean') ;
                                       
    JDRateAge = AggregateBin( repmat(JD_zn,1,Na) ,...
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    HiresRateAge = AggregateBin( [ exp(n_zn) / 12 , repmat(hires_zn,1,Na-1) ],...
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    HiresRateEAge = AggregateBin( [ hiresEentry_zn / 12 , repmat(hiresE_zn,1,Na-1) ],...
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    HiresRateNAge = AggregateBin( [ hiresNentry_zn / 12 , repmat(hiresN_zn,1,Na-1) ],...
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    SepsRateAge = AggregateBin( repmat(seps_zn,1,Na),...
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    ExitRateAge = AggregateBin( repmat(Exit_zn,1,Na) ,...
                                           repmat(1:Na,Nz*Nn,1),...
                                           expn_znamat ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    ExitRateUWAge = AggregateBin( repmat(ExitUW_zn,1,Na) ,...
                                           repmat(1:Na,Nz*Nn,1),...
                                           ones(Nz*Nn,Na) ,...
                                           AgeGridLevels,...
                                           gdzdn_znamat ,...
                                           'Levels','mean') ;
                                       
    FirmShareAge = AggregateBin( gdzdn_znamat ,...
                                           repmat(1:Na,Nz*Nn,1),...
                                           ones(Nz*Nn,Na),...
                                           AgeGridLevels,...
                                           ones(Nz*Nn,Na),...
                                           'Levels','sum') ;
                                       
    EmpShareAge = AggregateBin( gndzdn_znamat ,...
                                           repmat(1:Na,Nz*Nn,1),...
                                           ones(Nz*Nn,Na),...
                                           AgeGridLevels,...
                                           ones(Nz*Nn,Na),...
                                           'Levels','sum') ;

    	% Approximate to quarterly frequency
    JCRateAge       = JCRateAge     / 4 ; % annual -> quarterly approx. as we do in the data
    JDRateAge       = JDRateAge     / 4 ; % annual -> quarterly approx. as we do in the data
    HiresRateAge    = HiresRateAge  * 3 ; % monthly -> quarterly approx. not as we do in the data
    HiresRateEAge   = HiresRateEAge * 3 ; % monthly -> quarterly approx. not as we do in the data
    HiresRateNAge   = HiresRateNAge * 3 ; % monthly -> quarterly approx. not as we do in the data
    SepsRateAge     = SepsRateAge   * 3 ; % monthly -> quarterly approx. not as we do in the data
    ExitRateAge     = ExitRateAge   / 4 ; % annual -> quarterly approx. as we do in the data
    ExitRateUWAge   = ExitRateUWAge / 4 ; % annual -> quarterly approx. as we do in the data
        
        % Due to time-aggregation, enforce:
    HiresRateAge(1) = JCRateAge(1) - JDRateAge(1) + SepsRateAge(1) ;                         

end